DELIMITER $$

CREATE PROCEDURE sp_get_product_data(
    IN `limit` INT,
    IN `page` INT,
    IN `search` VARCHAR(255),
    IN `sort_column` VARCHAR(255),
    IN `sort_direction` VARCHAR(4)
)
BEGIN
    DECLARE offset_value INT;

    -- Calculate OFFSET based on page and limit
    SET offset_value = (`page` - 1) * `limit`;

    -- Query with inline SQL for filtering, sorting, and pagination
    SELECT 
        product.product_name, 
        product.price, 
        product.stock, 
        product.created_at, 
        product.updated_at, 
        category.category_name
    FROM MD_Product product
    INNER JOIN REF_Category category 
        ON product.category_id = category.category_id
    WHERE product.is_deleted = FALSE
    AND (
        product.product_name LIKE CONCAT('%', `search`, '%')
        OR product.price LIKE CONCAT('%', `search`, '%')
        OR product.stock LIKE CONCAT('%', `search`, '%')
        OR product.created_at LIKE CONCAT('%', `search`, '%')
        OR product.updated_at LIKE CONCAT('%', `search`, '%')
        OR category.category_name LIKE CONCAT('%', `search`, '%')
    )
    ORDER BY 
        CASE 
            WHEN `sort_column` = 'product_name' THEN product.product_name
            WHEN `sort_column` = 'price' THEN product.price
            WHEN `sort_column` = 'stock' THEN product.stock
            WHEN `sort_column` = 'created_at' THEN product.created_at
            WHEN `sort_column` = 'updated_at' THEN product.updated_at
            WHEN `sort_column` = 'category_name' THEN category.category_name
            ELSE product.product_name
        END,
        CASE 
            WHEN `sort_direction` = 'ASC' THEN 1
            WHEN `sort_direction` = 'DESC' THEN -1
            ELSE 1  -- Default to ASC if no valid direction
        END
    LIMIT `limit` OFFSET offset_value;

END$$

DELIMITER ;
